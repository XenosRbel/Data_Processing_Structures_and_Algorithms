<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=Generator content="Microsoft Word 12 (filtered)">
<title>Лекция 5</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
h2
	{mso-style-link:"Заголовок 2 Знак";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-align:justify;
	text-indent:35.45pt;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	font-style:italic;}
h3
	{mso-style-link:"Заголовок 3 Знак";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
p.MsoBodyTextIndent3, li.MsoBodyTextIndent3, div.MsoBodyTextIndent3
	{mso-style-link:"Основной текст с отступом 3 Знак";
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Текст выноски Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:35.45pt;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";}
span.2
	{mso-style-name:"Заголовок 2 Знак";
	mso-style-link:"Заголовок 2";
	font-family:"Cambria","serif";
	font-weight:bold;
	font-style:italic;}
span.a
	{mso-style-name:"Текст выноски Знак";
	mso-style-link:"Текст выноски";
	font-family:"Tahoma","sans-serif";}
span.3
	{mso-style-name:"Заголовок 3 Знак";
	mso-style-link:"Заголовок 3";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.30
	{mso-style-name:"Основной текст с отступом 3 Знак";
	mso-style-link:"Основной текст с отступом 3";
	font-family:"Times New Roman","serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=RU>

<div class=WordSection1>

<h2 align=center style='text-align:center;text-indent:1.0cm'><a
name="_Toc306217243"></a><a name="_Toc275163505"></a><a name="_Toc273327114"></a><a
name="_Toc273326316"></a><a name="_Toc273324816"></a><a name="_Toc273324624"></a><a
name="_Toc273296968"></a><a name="_Toc273296562"></a><a name="_Toc273296170"></a><a
name="_Toc273295816"></a><a name="_Toc273281297"><span style='font-family:"Times New Roman","serif";
font-style:normal'>Лекция </span></a><span style='font-family:"Times New Roman","serif";
font-style:normal'>5</span></h2>

<p class=MsoNormal style='text-indent:27.0pt'>План лекции:</p>

<p class=MsoNormal style='text-indent:27.0pt'>1. Структура динамической
цепочки.</p>

<p class=MsoNormal style='text-indent:27.0pt'>2. Формирование цепочки.</p>

<p class=MsoNormal style='text-indent:27.0pt'>3. Поиск элемента в цепочке.</p>

<p class=MsoNormal style='text-indent:27.0pt'>4. Удаление элемента из цепочки.</p>

<p class=MsoNormal style='text-indent:27.0pt'>5. Вставка элемента в цепочку.</p>

<p class=MsoNormal style='text-indent:27.0pt'>6. Абстрактный тип данных
«список».</p>

<p class=MsoNormal style='text-indent:27.0pt'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>5.1.
Структура динамической цепочки</b></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>&nbsp;</b></p>

<p class=MsoNormal style='text-indent:0cm'>        Динамические цепочки
являются аналогами строк. В строке каждый следующий элемент занимает ячейку
памяти со следующим по порядку адресом. Элементы строки можно размещать в
памяти произвольно, если каждый элемент снабдить явным указанием места, где
находится следующий за ним элемент. В этом случае каждый элемент строки должен
состоять из двух полей: в одном полем (<i><span lang=EN-US>Element</span></i>) –
символ строки, в другом (<i><span lang=EN-US>Adrcled</span></i>) – ссылки на
следующий элемент строки (адрес следующего элемента).</p>

<p class=MsoNormal style='text-indent:0cm'>        Каждая такая пара называется
<i>звеном</i>. Ссылки связывают звенья в одну <i>цепочку</i>. Такой способ
представления упорядоченной последовательности элементов называется <i>сцеплением</i>.
Сцепление применяется для представления любых сложных динамических структур
данных:  строк, списков, деревьев и т.д. В этом случае звено всегда состоит из
двух частей: <i>тела звена</i> (элемента последовательности) и <i>справочной
части</i> (ссылки на другие элементы структуры). Таким образом, для
представления звена необходимо использовать запись, состоящую из двух полей.</p>

<p class=MsoNormal style='text-indent:0cm'>         <i>Пример 5.1.</i> Представление
звена цепочки.</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal><img width=265 height=139 id="Рисунок 1"
src="lk5.files/image001.jpg"></p>

<p class=MsoNormal style='text-indent:1.0cm'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:1.0cm'>В данном примере имя типа  <i><span
lang=EN-US>Zveno</span></i><span lang=EN-US> </span> используется до его
описания при описании типа <i><span lang=EN-US>Adr</span></i> (ссылочного
типа). <i>Ссылочный тип – единственный тип, где можно использовать имя до его
описания.</i> Обратную последовательность объявлений (вначале описать тип <i><span
lang=EN-US>Zveno</span></i>, а потом – тип <i><span lang=EN-US>Adr</span></i>)
в примере 5.1 использовать нельзя. Поскольку в типе <i><span lang=EN-US>Zveno</span></i>
используется неописанный тип <i><span lang=EN-US>Adr</span></i>, а <i><span
lang=EN-US>Zveno</span></i> не является ссылочным типом.</p>

<p class=MsoNormal style='text-indent:1.0cm'>Последнее звено цепочки должно
быть снабжено ссылкой <i><span lang=EN-US>Nil</span>,</i> которая является признаком
конца цепочки.</p>

<p class=MsoNormal style='text-indent:1.0cm'>Для работы с цепочкой необходимо
использовать два указателя: ссылку на ее первое звено (<i><span lang=EN-US>Adr</span>1</i>)
 и ссылку на текущее звено (<i><span lang=EN-US>Adrzv</span></i>). Ссылки
должны иметь тип <i><span lang=EN-US>Adr</span></i>. Например,</p>

<p class=MsoNormal style='text-indent:1.0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:1.0cm'><i><span lang=EN-US>Var</span><span
lang=EN-US> </span></i><i><span lang=EN-US>Adr</span>1, </i><i><span
lang=EN-US>Adrzv</span>: </i><i><span lang=EN-US>Adr</span>;</i></p>

<p class=MsoNormal style='text-indent:1.0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:1.0cm'>Схематично цепочка может быть
представлена так, как показано на рисунке 5.1.</p>

<p class=MsoNormal style='text-indent:0cm'><img width=575 height=217
id="Рисунок 4" src="lk5.files/image002.jpg"></p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>Рисунок
5.1. – Схематичное представление цепочки</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'>         Для удобства работы с
цепочкой в нее обычно включается заглавное «нулевое» звено. В поле <i><span
lang=EN-US>Adrcled</span></i><span lang=EN-US> </span>данного звена содержится
ссылка на первое звено цепочки (его адрес). Поле <i><span lang=EN-US>Element</span></i><span
lang=EN-US> </span>может быть использовано для хранения какой-либо информации о
строке.</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>5.2
Формирование цепочки</b></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>&nbsp;</b></p>

<p class=MsoNormal style='text-indent:0cm'><b>        </b>Пусть имеется
объявление звена цепочки, соответствующее примеру 5.1. На его основе  строится
алгоритм формирования цепочки, состоящий из следующих шагов.</p>

<p class=MsoListParagraphCxSpFirst style='margin-left:0cm;text-indent:1.0cm'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>Отвести область памяти для
очередного звена. Его адрес занести в поле <i><span lang=EN-US>Adrcled</span></i>
текущего звена.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:1.0cm'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>Новое звено сделать текущим.
Для этого занести его адрес в указатель текущего звена <i><span lang=EN-US>Adrzv</span></i>.
</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:1.0cm'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>В поле <i><span lang=EN-US>Element</span></i>
текущего звена занести очередной символ.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:1.0cm'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>В поле <i><span lang=EN-US>Adrcled</span><span
lang=EN-US> </span></i>текущего звена занести <i><span lang=EN-US>Nil</span></i>.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:1.0cm'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>Прочитать следующий символ
исходного текста.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:1.0cm'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>Повторить этапы алгоритма,
начиная с первого шага.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:1.0cm;text-indent:0cm'>&nbsp;</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:1.0cm'>Предварительно
перед выполнением алгоритма необходимо сформировать заглавное звено. Пояснения
к алгоритму формирования цепочки с заглавным звеном представляет рисунок 5.2,
где номерами в фигурных скобках представлены действия соответствующих этапов
алгоритма. </p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:7.1pt'><img
width=569 height=213 id="Рисунок 10" src="lk5.files/image003.jpg"></p>

<p class=MsoListParagraphCxSpMiddle align=center style='margin-left:0cm;
text-align:center;text-indent:7.1pt'>Рисунок 5.2 – Схема алгоритма формирования
цепочки</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:7.1pt'>&nbsp;</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:7.1pt'>          Пример
5.2. Формирование цепочки. Ввод исходной строки и представление ее в виде
цепочки. Признак окончания строки – точка. Раздел типов соответствует примеру
5.1.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:0cm;text-indent:7.1pt'>&nbsp;</p>

<p class=MsoListParagraphCxSpLast style='margin-left:0cm;text-indent:0cm'><img
width=638 height=503 id="Рисунок 16" src="lk5.files/image004.jpg"></p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'>        Номера {1} – {5} операторов
программы, приведенной в данном примере, соответствуют номерам этапов алгоритма
формирования цепочки.</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>5.3.
Поиск элемента в цепочке</b></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>&nbsp;</b></p>

<p class=MsoNormal style='text-indent:0cm'><b>        </b>При поиске элемента
необходимо последовательно перебирать все звенья цепочки. Для перехода от
одного звена к следующему нужно в цикле выполнять оператор присваивания</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'>        <i><span lang=EN-US>Adrzv</span>:=</i><i><span
lang=EN-US>Adrzv</span>^.</i><i><span lang=EN-US>Adrcled</span>,</i></p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'>то есть присваивать указателю
текущего звена в качестве нового значения ссылку на следующее звено. Данный
оператор присваивания является аналогом оператора </p>

<p class=MsoNormal style='text-indent:0cm'>        <i><span lang=EN-US>I</span>:=</i><i><span
lang=EN-US>I</span>+</i>1<i>,</i></p>

<p class=MsoNormal style='text-indent:0cm'>выполняемого для получения номера <i><span
lang=EN-US>I</span><span lang=EN-US> </span></i>следующего элемента при
векторном представлении строки типа <i><span lang=EN-US>Array</span><span
lang=EN-US> </span></i><i><span lang=EN-US>Of</span><span lang=EN-US> </span></i><i><span
lang=EN-US>Char</span><span lang=EN-US> </span></i>или <i> </i><i><span
lang=EN-US>String</span></i>.<i> </i></p>

<p class=MsoNormal style='text-indent:0cm'>        <i>Пример 5.3.</i> Поиск
элемента в строке-цепочке. Подсчет числа его вхождений в строку.</p>

<p class=MsoNormal style='text-indent:0cm'><img width=623 height=421
id="Рисунок 19" src="lk5.files/image005.jpg"></p>

<p class=MsoNormal><i>&nbsp;</i></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>5.4.
Удаление элемента из цепочки</b></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>&nbsp;</b></p>

<p class=MsoNormal style='text-indent:0cm'>         Исключаемый элемент
наиболее удобно задавать при помощи ссылки на то звено, за которым следует этот
элемент. При этом учитывается, что если какое-либо звено существует, но на него
нет ссылки из другого звена, то оно недоступно при последовательном переборе
звеньев цепочки. Поэтому это звено в цепочку не входит.</p>

<p class=MsoNormal style='text-indent:0cm'>         Например, в исходной
цепочке (рисунок 5.3) необходимо удалить элемент 2. Для этого нужно, чтобы
звено 1 ссылалось на звено 3 (рисунок 5.4).</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><img
width=581 height=101 id="Рисунок 22" src="lk5.files/image006.jpg"></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>Рисунок
5.3 – Фрагмент исходной цепочки</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><img
width=482 height=153 id="Рисунок 25" src="lk5.files/image007.jpg"></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>Рисунок
5.4 – Результат удаления элемента 2</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'>         Таким образом, для
исключения элемента из цепочки необходимо изменить ссылку у предшествующего ему
элемента. В качестве новой ссылки у этого элемента следует принять ссылку,
содержащуюся в исключаемом элементе.</p>

<p class=MsoNormal style='text-indent:0cm'>         <i>Пример 5.4.</i> Удаление
из цепочки второго элемента. Для удаления необходимо использовать оператор</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><img
width=451 height=122 id="Рисунок 34" src="lk5.files/image008.jpg"></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:35.4pt'>В этом случае в указателе
текущего звена <i><span lang=EN-US>Adrzv</span><span lang=EN-US> </span></i>должен
находиться адрес элемента 1, предшествующего исключаемому.</p>

<p class=MsoNormal style='text-indent:35.4pt'><i>Пример 5.5.</i> Процедура
удаления элемента из цепочки.</p>

<p class=MsoNormal style='text-indent:35.4pt'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'><img width=601 height=208
id="Рисунок 37" src="lk5.files/image009.jpg"></p>

<p class=MsoNormal style='text-indent:0cm'>         В данном примере в качестве
параметра <span lang=EN-US>Zv</span> процедуры должен передаваться адрес звена,
предшествующего удаляемому.</p>

<p class=MsoNormal style='text-indent:0cm'>         В примере 5.4 удаление
элемента из цепочки выполняется быстрее, но память расходуется неэффективно,
так как отсутствует процедура <i><span lang=EN-US>Dispose</span></i>.</p>

<p class=MsoNormal style='text-indent:0cm'>         В примере 5.5 удаление
звена из цепочки происходит медленнее, но память расходуется эффективнее.</p>

<p class=MsoNormal style='text-indent:0cm'>         Способ удаления необходимо
выбирать, исходя из конкретных требований к характеристикам программы. </p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>5.5.
Вставка элемента в цепочку</b></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><b>&nbsp;</b></p>

<p class=MsoNormal style='text-indent:0cm'>         Вставка элемента в цепочку
основывается на объединении отдельных звеньев в единую цепочку. Пусть в
исходную цепочку (рисунок 5.5) после элемента 1 необходимо вставить элемент 4.
После вставки цепочка будет выглядеть, как показано на рисунке 5.6.</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><img
width=500 height=91 id="Рисунок 40" src="lk5.files/image010.jpg"></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>Рисунок
5.5 – Фрагмент исходной цепочки</p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'><img
width=545 height=201 id="Рисунок 43" src="lk5.files/image011.jpg"></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>Рисунок
5.6 – Результат вставки элемента 4</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'>        <i>Алгоритм вставки нового
звена после заданного</i></p>

<p class=MsoListParagraphCxSpFirst style='margin-left:7.1pt;text-indent:21.25pt'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>Создать новую динамическую
переменную (запись типа <i><span lang=EN-US>Zveno</span></i>), которой будет
представлено вставляемое звено.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:7.1pt;text-indent:21.25pt'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>В поле <i><span lang=EN-US>Element</span><span
lang=EN-US> </span></i>этой переменной занести вставляемый элемент.</p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:7.1pt;text-indent:21.25pt'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>В поле <i><span lang=EN-US>Adrcled</span><span
lang=EN-US> </span></i>этой переменной занести ссылку, взятую из поля <i><span
lang=EN-US>Adrcled</span></i> предшествующего звена.</p>

<p class=MsoListParagraphCxSpLast style='margin-left:7.1pt;text-indent:21.25pt'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span>В поле <i><span lang=EN-US>Adrcled</span></i>
предшествующего звена занести ссылку на вставляемое звено.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><i>&nbsp;</i></p>

<p class=MsoNormal><i>&nbsp;</i></p>

<p class=MsoNormal><i>Пример 5.6.</i> Процедура вставки звена в цепочку. Номера
операторов в примере соответствуют номерам этапов алгоритма вставки. </p>

<p class=MsoNormal style='text-indent:0cm'><img width=636 height=228
id="Рисунок 52" src="lk5.files/image012.jpg"></p>

<h3 align=center style='text-align:center'><a name="_Toc306217254"></a><a
name="_Toc275163516"></a><a name="_Toc273327124"></a><a name="_Toc273326326"></a><a
name="_Toc273324826"></a><a name="_Toc273324635"></a><a name="_Toc273296979"></a><a
name="_Toc273296573"></a><a name="_Toc273296181"></a><a name="_Toc273295834"></a><a
name="_Toc273281420"><span style='font-family:"Times New Roman","serif";
color:windowtext'>5.6 Абстрактный тип данных «список»</span></a></h3>

<p class=MsoNormal style='text-indent:27.0pt'> </p>

<p class=MsoNormal style='text-indent:27.0pt'>В математике список представляет
собой последовательность элементов определенного типа: <i>а</i><sub>1</sub>, <i>а</i><sub>2</sub>,
…..<i>а</i><i><sub><span lang=EN-US>n</span></sub></i>, где <i><span
lang=EN-US>n</span></i><span style='font-family:"Tahoma","sans-serif"'>&#8805;</span>0
и все <i>а</i><i><sub><span lang=EN-US>i</span></sub></i> имеют один тип.
Количество, <i><span lang=EN-US>n</span></i> – длина списка, если <i><span
lang=EN-US>n</span></i><span style='font-family:"Tahoma","sans-serif"'>&nbsp;&#8805;&nbsp;</span>1,
то <i>а</i><sub>1</sub> – первый элемент, а <i>а</i><i><sub><span lang=EN-US>n</span></sub></i>
– последний, в случае <i><span lang=EN-US>n</span></i>&nbsp;=&nbsp;0 имеем
пустой список.</p>

<p class=MsoNormal style='text-indent:27.0pt'>Списки являются чрезвычайно
гибкой структурой: их легко сделать большими или меньшими; их элементы доступны
для вставки или удаления в любой позиции списка. Списки можно объединять или
разбивать на меньшие списки.</p>

<p class=MsoNormal style='text-indent:27.0pt'>При реализации списков с помощью
массивов их элементы располагаются в смежных ячейках массива. Это представление
позволяет легко просматривать содержимое списка и вставлять новые элементы в
его конец. Однако вставка нового элемента в середину списка требует перемещения
всех последующих элементов на одну позицию к концу массива. Операция удаления
также требует перемещения элементов списка с целью освобождения ячейки.</p>

<p class=MsoNormal style='text-indent:27.0pt'>Рассмотрим реализацию
однонаправленного связанного списка с использованием указателей, связывающих
последовательные элементы списка. Однонаправленный связанный список
представляет собой динамическую структуру данных, число элементов которой может
изменяться по мере того, как данные помещаются в список или удаляются из него.
Эта реализация освобождает от непрерывной области памяти для хранения списка и,
следовательно, от необходимости перемещения элементов списка при вставке или удалении
элементов. Однако ценой за это удобство становится использование дополнительной
памяти для хранения указателей.</p>

<p class=MsoNormal style='text-indent:27.0pt'>В этой реализации список состоит
из ячеек, каждая из которых содержит элемент списка и указатель на следующую
ячейку списка. Если список состоит из элементов <span style='position:relative;
top:6.0pt'><img width=91 height=25 src="lk5.files/image013.gif"></span> то для <i>i=1,
2,…, n-1</i> ячейка, содержащая элемент <span style='position:relative;
top:6.0pt'><img width=19 height=25 src="lk5.files/image014.gif"></span>, имеет
также указатель на ячейку, содержащую элемент <span style='position:relative;
top:6.0pt'><img width=36 height=25 src="lk5.files/image015.gif"></span>. Ячейка,
содержащая элемент <span style='position:relative;top:6.0pt'><img width=23
height=25 src="lk5.files/image016.gif"></span>, имеет указатель<i> nil</i>
(нуль). Имеется также ячейка <i>header</i> (заголовок), которая указывает на
ячейку, содержащую <span style='position:relative;top:6.0pt'><img width=19
height=25 src="lk5.files/image017.gif"></span>. Ячейка <i>header</i> не
содержит элементов списка. В случае пустого списка заголовок имеет указатель <i>nil</i>,
не указывающий ни на какую ячейку. Список, не содержащий элементов, называется
пустым или нулевым. На рисунке 5.7 показан однонаправленный связанный список.</p>

<p class=MsoNormal style='text-indent:27.0pt'>&nbsp;</p>

<p class=MsoNormal style='text-indent:0cm'><img width=587 height=95
id="Рисунок 6" src="lk5.files/image018.jpg"></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>Рисунок
5.7 – Однонаправленный список</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:27.0pt'>Для однонаправленных списков
удобно использовать определение позиций элементов, отличное от того
определения, которое применялось в реализации списков с помощью массивов. Здесь
для <i>i=2, 3, … , n</i> позиция <i>i </i>определяется как указатель на ячейку,
содержащую указатель на  элемент <span style='position:relative;top:6.0pt'><img
width=19 height=25 src="lk5.files/image014.gif"></span>. Позиция 1 – это
указатель в ячейке заголовка, а позиция <i>end</i>(L) – указатель в последней
ячейке списка L. Формально структуру связанного списка можно определить следующим
образом:</p>

<p class=MsoNormal style='text-indent:27.0pt'>Динамическая цепочка является
частным случаем <i>линейного однонаправленного списка</i>. В случае цепочки
информационными элементами списка являются символы (тип <i>Char</i>). В общем
случае информационными элементами списка могут быть значения любого типа –
числа, массивы, записи и т.п. Принцип организации информационных элементов в
список – тот же: информационный элемент очередного звена снабжается ссылкой на
следующее звено.</p>

<p class=MsoNormal style='text-indent:1.0cm'><i>Пример 5.7.</i> Определение
структуры звена однонаправленного списка. </p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-3.8pt'><i><span
lang=EN-US>Type Adres1 = ^Zveno1;</span></i></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:0cm'><i><span
lang=EN-US>       Zveno1 =  Record</span></i></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:0cm'><i><span
lang=EN-US>                             Adrcled: Adres1;</span></i></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:0cm'><i><span
lang=EN-US>                             Element</span></i><i>:
&lt;Тип_элемента_списка&gt;</i></p>

<p class=MsoNormal style='text-indent:0cm'><i>                            </i><i><span
lang=EN-US>End</span></i><i>;</i></p>

<p class=MsoNormal style='text-indent:0cm'>&nbsp;</p>

<p class=MsoNormal style='text-indent:1.0cm'>Элементами списка являются
значения одного и того же типа.</p>

<p class=MsoNormal style='text-indent:27.0pt'>Основные операции, выполняемые с
элементами списка, те же, что и для звеньев динамической цепочки: поиск,
вставка, удаление. </p>

<p class=MsoNormal style='text-indent:1.0cm'><i>Недостаток</i>
однонаправленного списка – по нему можно двигаться только в одном направлении,
от заглавного звена к последнему звену списка. Это замедляет работу с ним.</p>

<p class=MsoNormal align=center style='text-align:center;text-indent:0cm'>&nbsp;</p>

</div>

</body>

</html>
